{"version":3,"sources":["Tab.js","Tabs.js","CompoundTable.js","App.js","serviceWorker.js","index.js"],"names":["Tab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","className","react_default","a","createElement","Component","Tabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","src_Tab","key","imgFormater","cell","row","data","concat","type","aria-label","style","height","aliasFormater","replace","expandRow","renderer","id","list-style-type","abbreviation","deltag","deltagerr","pka","pkb","inchikey","smiles","is_core","is_cofactor","is_obsolete","source","showExpandColumn","onlyOneExpanding","CompoundTable","table_items","columns","dataField","text","sort","formatter","_this2","axios","get","then","response","marginTop","lib_default","keyField","pagination","paginationFactory","App","src_Tabs","src_CompoundTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kLA0CeA,6MAhCbC,QAAU,WAAM,IAAAC,EACaC,EAAKC,MAAxBC,EADMH,EACNG,OACRJ,EAFcC,EACCD,SACPI,4EAGD,IAELJ,EAKEK,KALFL,QAFKM,EAOHD,KAJFF,MACEI,EAJGD,EAIHC,UACAH,EALGE,EAKHF,MAIAI,EAAY,gBAMhB,OAJID,IAAcH,IAChBI,GAAa,oBAIbC,EAAAC,EAAAC,cAAA,MACEH,UAAWA,EACXR,QAASA,GAERI,UAhCSQ,aCyDHC,cAlDb,SAAAA,EAAYV,GAAO,IAAAD,EAAA,OAAAY,OAAAC,EAAA,EAAAD,CAAAT,KAAAQ,IACjBX,EAAAY,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAb,KAAMF,KAORgB,eAAiB,SAACC,GAChBlB,EAAKmB,SAAS,CAAEd,UAAWa,KAN3BlB,EAAKoB,MAAQ,CACXf,UAAWL,EAAKC,MAAMoB,SAAS,GAAGpB,MAAMC,OAJzBF,wEAYV,IAELiB,EAOEd,KAPFc,eAEEI,EAKAlB,KANFF,MACEoB,SAGAhB,EAEAF,KAHFiB,MACEf,UAIJ,OACEE,EAAAC,EAAAC,cAAA,OAAKH,UAAU,QACbC,EAAAC,EAAAC,cAAA,MAAIH,UAAU,YACXe,EAASC,IAAI,SAACC,GAAU,IACfrB,EAAUqB,EAAMtB,MAAhBC,MAER,OACEK,EAAAC,EAAAC,cAACe,EAAD,CACEnB,UAAWA,EACXoB,IAAKvB,EACLA,MAAOA,EACPJ,QAASmB,OAKjBV,EAAAC,EAAAC,cAAA,OAAKH,UAAU,eACZe,EAASC,IAAI,SAACC,GACb,GAAIA,EAAMtB,MAAMC,QAAUG,EAC1B,OAAOkB,EAAMtB,MAAMoB,oBA/CZX,wECCnB,SAASgB,EAAYC,EAAMC,GACvB,OACIrB,EAAAC,EAAAC,cAAA,UAAQoB,KAAI,6DAAAC,OAA+DH,EAA/D,QACPI,KAAK,YAAYC,aAAA,aAAAF,OAAyBH,GAAQM,MAAO,CAACC,OAAQ,WAI/E,SAASC,EAAcR,EAAMC,GACzB,OACIrB,EAAAC,EAAAC,cAAA,YAAOkB,EAAKS,QAAQ,MAAO,MAAMA,QAAQ,KAAM,OAIvD,IAAMC,EAAY,CAChBC,SAAU,SAAAV,GACN,OACArB,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACbC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,UACbC,EAAAC,EAAAC,cAAA,UAAQoB,KAAI,6DAAAC,OAA+DF,EAAIW,GAAnE,QACPR,KAAK,YAAYC,aAAA,aAAAF,OAAyBF,EAAIW,IAAMN,MAAO,CAACC,OAAQ,YAE3E3B,EAAAC,EAAAC,cAAA,OAAKH,UAAU,UACbC,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAACO,kBAAmB,SAC3BjC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,IAAoCmB,EAAIa,cACxClC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAJ,IAA8BmB,EAAIc,QAClCnC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAJ,IAAoCmB,EAAIe,WACxCpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAJ,IAA2BmB,EAAIgB,KAC/BrC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAJ,IAA2BmB,EAAIiB,KAC/BtC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,2BAAJ,IAAgCmB,EAAIkB,UACpCvC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAJ,IAA8BmB,EAAImB,QAClCxC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,0BAAJ,IAA+BmB,EAAIoB,SACnCzC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BAAJ,IAAmCmB,EAAIqB,aACvC1C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BAAJ,IAAmCmB,EAAIsB,aACvC3C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAJ,IAA8BmB,EAAIuB,YAK9CC,kBAAkB,EAClBC,kBAAkB,GA4DLC,6MAxDblC,MAAQ,CACNmC,YAAa,GACbC,QAAS,CAAC,CACRC,UAAW,KACXC,KAAM,KACNC,MAAM,GACL,CACDF,UAAW,KACXC,KAAM,QACNE,UAAWlC,GACV,CACD+B,UAAW,OACXC,KAAM,OACNC,MAAM,GACL,CACDF,UAAW,UACXC,KAAM,UACNC,MAAM,GACL,CACDF,UAAW,OACXC,KAAM,OACNC,MAAM,GACL,CACDF,UAAW,SACXC,KAAM,SACNC,MAAM,GACL,CACDF,UAAW,UACXC,KAAM,UACNE,UAAWzB,wFAIK,IAAA0B,EAAA1D,KAClB2D,IAAMC,IAAI,iGACPC,KAAK,SAAAC,GACJJ,EAAK1C,SAAS,CACZoC,YAAaU,EAASpC,0CAM5B,OACEtB,EAAAC,EAAAC,cAAA,OAAKH,UAAU,YAAY2B,MAAO,CAAEiC,UAAW,KAC7C3D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CACA4D,SAAS,KACTvC,KAAO1B,KAAKiB,MAAMmC,YAClBC,QAAUrD,KAAKiB,MAAMoC,QACrBa,WAAaC,MACbjC,UAAYA,YAnDQ3B,aC3Bb6D,mLAfX,OACEhE,EAAAC,EAAAC,cAAA,OAAKH,UAAU,YAAY2B,MAAO,CAAEiC,UAAW,KAC7C3D,EAAAC,EAAAC,cAAC+D,EAAD,KACEjE,EAAAC,EAAAC,cAAA,OAAKP,MAAM,aACTK,EAAAC,EAAAC,cAACgE,EAAD,OAEFlE,EAAAC,EAAAC,cAAA,OAAKP,MAAM,aACTK,EAAAC,EAAAC,cAAA,mDATMC,aCQEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.65966e59.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport axios from 'axios';\n\nfunction imgFormater(cell, row) {\n    return (\n        <object data={`http://minedatabase.mcs.anl.gov/compound_images/ModelSEED/${cell}.png`}\n             type=\"image/png\" aria-label={`Image for ${cell}`} style={{height: '100px'}}/>\n    );\n  }\n\nfunction aliasFormater(cell, row) {\n    return (\n        <span>{cell.replace(/\\|/g, ', ').replace(/;/g, '\\n')}</span>\n    );\n  }\n\nconst expandRow = {\n  renderer: row => {\n      return (\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <object data={`http://minedatabase.mcs.anl.gov/compound_images/ModelSEED/${row.id}.png`}\n               type=\"image/png\" aria-label={`Image for ${row.id}`} style={{height: '300px'}}/>\n        </div>\n        <div className=\"col-sm\">\n          <ul style={{'list-style-type': 'none'}}>\n              <li><strong>Abbreviation:</strong> {row.abbreviation}</li>\n              <li><strong>DeltaG:</strong> {row.deltag}</li>\n              <li><strong>DeltaG Error:</strong> {row.deltagerr}</li>\n              <li><strong>pKa:</strong> {row.pka}</li>\n              <li><strong>pKb:</strong> {row.pkb}</li>\n              <li><strong>InChIKey:</strong> {row.inchikey}</li>\n              <li><strong>SMILES:</strong> {row.smiles}</li>\n              <li><strong>Is Core:</strong> {row.is_core}</li>\n              <li><strong>Is Cofactor:</strong> {row.is_cofactor}</li>\n              <li><strong>Is Obsolete:</strong> {row.is_obsolete}</li>\n              <li><strong>Source:</strong> {row.source}</li>\n          </ul>\n        </div>\n      </div>\n  )},\n  showExpandColumn: true,\n  onlyOneExpanding: true\n};\n\nclass CompoundTable extends Component {\n  state = {\n    table_items: [],\n    columns: [{\n      dataField: 'id',\n      text: 'ID',\n      sort: true\n    }, {\n      dataField: 'id',\n      text: 'Image',\n      formatter: imgFormater\n    }, {\n      dataField: 'name',\n      text: 'Name',\n      sort: true\n    }, {\n      dataField: 'formula',\n      text: 'Formula',\n      sort: true\n    }, {\n      dataField: 'mass',\n      text: 'Mass',\n      sort: true\n    }, {\n      dataField: 'charge',\n      text: 'Charge',\n      sort: true\n    }, {\n      dataField: 'aliases',\n      text: 'Aliases',\n      formatter: aliasFormater\n    }]\n  };\n\n  componentDidMount() {\n    axios.get('https://raw.githubusercontent.com/ModelSEED/ModelSEEDDatabase/dev/Biochemistry/compounds.json')\n      .then(response => {\n        this.setState({\n          table_items: response.data\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 50 }}>\n        <BootstrapTable\n        keyField='id'\n        data={ this.state.table_items }\n        columns={ this.state.columns }\n        pagination={ paginationFactory() }\n        expandRow={ expandRow } />\n      </div>\n    );\n  }\n}\n\nexport default CompoundTable;\n","import React, { Component } from 'react';\nimport Tabs from './Tabs';\nimport CompoundTable from './CompoundTable.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 50 }}>\n        <Tabs>\n          <div label=\"Compounds\">\n            <CompoundTable/>\n          </div>\n          <div label=\"Reactions\">\n            <h2>Reaction table will go here</h2>\n          </div>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}